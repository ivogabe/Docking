using System;
using System.IO;

namespace Docking {
	class Output {
		public static void Write(string fileName, Molecule moleculeA, Molecule moleculeB, Transformation transform, float value) {
			new Output(fileName, moleculeA, moleculeB, transform, value);
		}
		
		private StreamWriter writer;
		private int remarkId = 1;
		private int atomId = 1;
		
		private Output(string fileName, Molecule moleculeA, Molecule moleculeB, Transformation transform, float value) {
			writer = new StreamWriter(fileName);
			
			addRemark(new string [] { "Binding of " + moleculeA.FileName, "with " + moleculeB.FileName });
			addRemark(new string [] { "Energy between molecules: " + value.ToString("0.####", System.Globalization.CultureInfo.InvariantCulture) });
			
			for (int i = 0; i < moleculeA.Size; i++) {
				addAtom(
					moleculeA.AtomNames[i],
					moleculeA.AminoAcids[i],
					moleculeA.AminoAcidIds[i],
					moleculeA.X[i],
					moleculeA.Y[i],
					moleculeA.Z[i],
					moleculeA.Charge[i],
					moleculeA.Diameter[i]
				);
			}
			for (int i = 0; i < moleculeB.Size; i++) {
				Vector vector = transform.Transform(moleculeB.GetAtom(i));
				addAtom(
					moleculeB.AtomNames[i],
					moleculeB.AminoAcids[i],
					moleculeB.AminoAcidIds[i],
					vector.X,
					vector.Y,
					vector.Z,
					moleculeB.Charge[i],
					moleculeB.Diameter[i]
				);
			}
			
			writer.Close();
		}
		
		private void addRemark(string[] lines) {
			// REMARK   1 PQR file generated by PDB2PQR (Version 2.0.0)
			string head = "REMARK " + prefix(remarkId.ToString(), 3) + " ";
			foreach (string line in lines) {
				writer.WriteLine(head + line);
			}
			remarkId++;
		}
		private void addAtom(string atom, string aminoAcid, int aminoAcidId, float x, float y, float z, float charge, float diameter) {
			// ATOM      2  N   ASN   235      16.929  33.348   1.119 -0.3200 2.0000
			// ATOM      1  N   SER     2      30.025   8.937  50.567 -0.3200 2.0000
			writer.WriteLine(
				"ATOM " + prefix(atomId.ToString(), 6)
				+ " " + postfix(atom.Length > 4 ? atom : " " + atom, 3)
				+ " " + postfix(aminoAcid, 3)
				+ " " + prefix(aminoAcidId.ToString(), 5)
				+ " " + prefix(x.ToString("0.###", System.Globalization.CultureInfo.InvariantCulture), 7)
				+ " " + prefix(y.ToString("0.###", System.Globalization.CultureInfo.InvariantCulture), 7)
				+ " " + prefix(z.ToString("0.###", System.Globalization.CultureInfo.InvariantCulture), 7)
				+ " " + prefix(charge.ToString("0.####", System.Globalization.CultureInfo.InvariantCulture), 7)
				+ " " + prefix((diameter / 2).ToString("0.####", System.Globalization.CultureInfo.InvariantCulture), 6)
			);
			atomId++;
		}
		
		private string prefix(string str, int length) {
			if (str.Length > length) {
				return str.Substring(0, length);
			}
			while (str.Length < length) {
				str = " " + str;
			}
			return str;
		}
		private string postfix(string str, int length) {
			if (str.Length > length) {
				return str.Substring(0, length);
			}
			while (str.Length < length) {
				str = str + " ";
			}
			return str;
		}
	}
}